[
    {rdpproxy, [
        {frontend, [
            %%
            %% You can have multiple listeners running in different modes.
            %% One entry here per listener. Names are atoms.
            %%
            {default, [
                %%
                %% Port to listen on
                %%
                {port, 3389},

                %%
                %% The hostname that clients will connect to (must
                %% match the certificate under ssl_options)
                %%
                {hostname, <<"gs516-6440.eait.uq.edu.au">>},

                %%
                %% Domains to use with logins to backend servers
                %% The first item on this list will be the default
                %%
                {domains, [<<"KRB5.UQ.EDU.AU">>]},

                %%
                %% Allocation mode: nms_choice = look up user in NMS, present
                %% choose menu. pool = allocate from the pool of known machines.
                %%
                %{mode, nms_choice},
                %{mode, {pool, PoolName}},
                {mode, pool},

                %%
                %% Options for TLS from proxy => clients
                %%
                {ssl_options, [
                    %% Certificate we will use to secure communication with the clients
                    {certfile, "etc/cert.pem"},
                    {keyfile, "etc/key.pem"}
                ]}
            ]}
        ]},
        {ui, [
            %%
            %% Background colour for login screens
            %%
            {bg_colour, {16#49, 16#07, 16#5e}},

            %%
            %% Logo graphic (path relative to priv dir)
            %%
            {logo, "uq-logo.png"},

            %%
            %% Text for the "redirection not supported" error screen
            %%
            {title_noredir, <<"Sorry">>},
            {subtitle_noredir, <<"Redirection not supported">>},
            {msg_noredir, <<"It seems that your remote desktop client\n",
                           "does not support redirection, so it cannot\n",
                           "be used with EAIT remote access.">>},

            %%
            %% Text for the main login screen
            %%
            {title_login, <<"UQ Faculty of EAIT">>},
            {subtitle_login, <<"Staff Remote Access">>},
            {instruction_login, <<"Please enter your UQ username and password.">>},

            %%
            %% Text for the MFA prompt screen where users select a Duo device
            %%
            {title_mfa, <<"Multi-factor Authentication">>},
            {instruction_mfa, <<"Additional authentication with a device is required.\nPlease choose a device.">>},

            %%
            %% Text while waiting for Duo push / call
            %%
            {title_mfa_waiting, <<"Waiting for Duo">>},
            {instruction_mfa_waiting, <<"Please check your phone or device\n",
                                        "for a Duo Push prompt or call...\n">>},

            %%
            %% Text for the NMS chooser screen
            %%
            {title_choose, <<"Which computer?">>},
            {instruction_choose, <<"Please choose which computer to connect to:">>},

            %%
            %% Text for the pool chooser screen
            %%
            {title_choose_pool, <<"What type of computer?">>},
            {instruction_choose_pool, <<"You have access to more than one type of computer.\nPlease choose which type to connect to:">>},

            %%
            %% Error message when no machines are available on "choice" page
            %%
            {no_machines, <<"Sorry, we have no computers recorded as belonging to your\nuser (%USER%).\n\nIf you think this is incorrect, please email %HELPDESK%.">>},

            %%
            %% Error messages for different host problems
            %%
            {err_ssl, <<"Host has RDP TLS disabled, contact %HELPDESK%">>},
            {err_unreach, <<"Host appears to be off, trying to wake it up...">>},
            {err_refused, <<"Host not listening for RDP, contact %HELPDESK%">>},
            {err_cert, <<"Host has an invalid certificate, contact %HELPDESK%">>},

            %%
            %% Helpdesk email, used in some error messages
            %%
            {helpdesk, <<"helpdesk@eait.uq.edu.au">>},

            %%
            %% ACL to grant access to the administrative options in the "choice"
            %% screen (explicit host selection, disable fwd creds)
            %%
            {admin_acl, [
                %%
                %% Allow a specific user by username
                %%
                %{allow, user, <<"xxx">>},

                %%
                %% Allow an AD group (if authing against AD and krb5 is
                %% configured to obtain a service ticket)
                %%
                %{allow, group, {sid,1,5,[21,123545676989,123,123,1]}},

                %%
                %% Default-deny
                %%
                {deny, everybody}
            ]},

            %%
            %% ACL to grant access to the NMS menu in pool mode
            %%
            {pool_nms_acl, [
                %% See examples in admin_acl above
                {deny, everybody}
            ]}
        ]},
        {backend, [
            %%
            %% Options for TLS from proxy => backends
            %%
            {ssl_options, [
                %% Don't verify certs on backend servers
                {verify, verify_none}
            ]}
        ]},
        {http_api, [
            %%
            %% Port to listen on for HTTP API requests (to report backend machine
            %% status etc)
            %%
            {port, 8088},

            %%
            %% Who should be allowed to send status reports via the hypervisor
            %% API?
            %%
            {access_policy, [
                %%
                %% Allow localhost always
                %%
                {allow, net, {127, 0, 0, 0}, 16},
                %%
                %% Do reverse DNS lookup, require a particular suffix
                %%
                {require, dns_suffix, ".hv.labs.eait.uq.edu.au"},
                %%
                %% Only allow hosts on private IPs
                %%
                {require, rfc1918, true},
                %%
                %% Reporter must be in the same /16 as the subject it's
                %% reporting about
                %%
                {require, same_net, 16},
                %%
                %% Reporter's first DNS name component must be a prefix of the
                %% first DNS name component of the subject.
                %%
                {require, same_dns_prefix, 1, 1}
            ]}
        ]},
        {ra, [
            %%
            %% List of erlang nodes participating in the cluster
            %%
            %{nodes, [
            %    'rdpproxy@gs516-6440'
            %]},

            %%
            %% AES/HMAC keys for use protecting passwords in cookie storage
            %%
            {keys, [
                % { Key ref #, key (as a bignum) }
                {1, 16#9ce909408df2e85bf88ae7ce9db60c1a}
            ]}
        ]},
        {krb5, [
            %%
            %% Kerberos realm to authenticate users against
            %%
            {realm, "KRB5.UQ.EDU.AU"},

            %%
            %% Optional settings for KRB5 (explicit KDCs, ciphers)
            %%
            %{kdc, ["kdc1.domain"]},
            %{ciphers, [aes256_hmac_sha1, aes128_hmac_sha1, rc4_hmac]},

            %%
            %% How long to wait for KRB5 responses
            %%
            {timeout, 2000},

            %%
            %% Cross-realm checking. This is useful if you auth to a KRB5
            %% domain which then refers you to AD, and you want to check that
            %% the AD domain has the user as well.
            %%
            {cross_realm, [
                [
                    %%
                    %% The cross-realm to refer into. We will request a ticket
                    %% for krbtgt/THIS_VALUE@MAIN_KRB5_REALM_FROM_ABOVE
                    %%
                    {realm, "EAIT.UQ.EDU.AU"},

                    %%
                    %% Optional settings for KRB5 (explicit KDCs, ciphers)
                    %%
                    %{kdc, ["kdc1.domain"]},
                    %{ciphers, [aes256_hmac_sha1, aes128_hmac_sha1, rc4_hmac]},
                    %%
                    %% How long to wait for KRB5 responses
                    %%
                    {timeout, 2000},

                    %%
                    %% This is an AD domain, check that we get a PAC in our
                    %% service ticket
                    %%
                    {require_pac, true},

                    %%
                    %% Obtain a service ticket and validate it. Required if
                    %% require_pac is true, otherwise optional.
                    %%
                    {service, ["host", "rdp.eait.uq.edu.au"]},
                    {service_keys, [
                        {aes256_hmac_sha1, <<16#12345679abcd:256/big>>},
                        {aes128_hmac_sha1, <<16#12345689abcd:128/big>>}
                    ]}
                ]
            ]}
        ]},
        {duo, [
            %%
            %% Details for Duo 2FA
            %%
            {integration_key, <<"aaaaaa">>},
            {secret_key, <<"aaaaaa">>},
            {api_host, "api-abc123.duosecurity.com"},
            %%
            %% Interpret "enroll" responses from Duo as bypass
            %%
            {enroll_is_allow, true},
            %%
            %% Lifetime of "remember me" entries in seconds
            %%
            {remember_time, 36000}
        ]},
        {nms_api, [
            %%
            %% Options for talking to NMS (if using nms_choice mode, ignored
            %% in pool mode)
            %%
            %{api_host, "nms.eait.uq.edu.au"},
            %{key_id, <<"rdpproxy">>},
            %{privkey_path, "etc/nms_key.pem"}
        ]}
    ]},

    {lager, [
        {handlers, [
            {lager_console_backend, [{level, debug}]},
            {lager_file_backend, [{file, "log/console.log"}, {level, info}]},
            {lager_file_backend, [{file, "log/error.log"}, {level, error}]},
            {lager_file_backend, [{file, "log/debug.log"}, {level, debug}, {count, 10}]}
        ]},

        {crash_log, "log/crash.log"},
        {crash_log_date, "$D0"},
        {crash_log_count, 5},

        {error_logger_redirect, true}
    ]},

    {sasl, [
        {sasl_error_logger, false}
    ]}
].

